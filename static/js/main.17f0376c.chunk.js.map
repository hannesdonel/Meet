{"version":3,"sources":["Event.jsx","EventList.jsx","CitySearch.jsx","NumberOfEvents.jsx","mock-data.js","config.js","api.js","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["Event","props","toggleShow","state","show","turn","setState","event","this","className","type","onClick","summary","location","start","dateTime","slice","timeZone","description","onKeyDown","role","tabIndex","Component","EventList","newCount","events","showMore","setEventCount","count","handleShowMore","toString","map","id","CitySearch","handleInputChange","value","suggestionsToSet","locations","filter","toUpperCase","includes","query","suggestions","showSuggestions","handleSuggestionClick","suggestion","updateEvents","undefined","placeholder","onChange","e","target","onFocus","onBlur","setTimeout","style","visibility","opacity","NumberOfEvents","htmlFor","name","defaultValue","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","AUTH_ENDPOINT","EVENTS_ENDPOINT","TOKEN_ENDPOINT","removeQuery","newurl","window","protocol","host","pathname","history","pushState","extractLocations","extractedLocations","Set","getToken","code","a","encodeCode","encodeURIComponent","fetch","then","res","json","catch","error","access_token","localStorage","setItem","checkToken","accessToken","result","getAccessToken","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","get","axios","results","authUrl","data","href","getEvents","NProgress","startsWith","done","token","url","JSON","stringify","App","fetchData","number","currentLocation","setValue","document","getElementById","allEvents","locationEvents","locationEventsShortened","length","isLoading","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.17f0376c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n      turn: false,\n    };\n  }\n\n  toggleShow = () => {\n    const { show, turn } = this.state;\n    this.setState({ turn: !turn });\n    this.setState({ show: !show });\n  }\n\n  render() {\n    const { event } = this.props;\n    const { show, turn } = this.state;\n\n    return (\n      <div className=\"event\">\n        <button type=\"button\" className=\"event__window\" onClick={() => this.toggleShow()}>\n          <ul>\n            <li className=\"event__summary\">{event.summary}</li>\n            <li className=\"event__location\">{event.location}</li>\n            <li className=\"event__date\">\n              <p>\n                Date:\n                {' '}\n                {event.start.dateTime.slice(0, 10)}\n              </p>\n              <p>\n                Time:\n                {' '}\n                {event.start.dateTime.slice(11, 16)}\n                {' '}\n                {event.start.timeZone}\n                {' '}\n                {event.start.dateTime.slice(19, 26)}\n              </p>\n            </li>\n            {show === true && (\n            <p className=\"event__details\">{event.description}</p>\n            )}\n            <span\n              className={`material-icons event__show-more-button ${turn ? '' : 'turn'}`}\n              onClick={() => this.toggleShow()}\n              onKeyDown={() => this.toggleShow()}\n              role=\"button\"\n              tabIndex={0}\n            >\n              keyboard_double_arrow_down\n            </span>\n          </ul>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React from 'react';\nimport Event from './Event';\n\nconst EventList = ({\n  events, showMore, setEventCount, count,\n}) => {\n  let newCount;\n  const handleShowMore = () => {\n    switch (count.toString()) {\n      case '1':\n        newCount = 2;\n        break;\n      case '2':\n        newCount = 4;\n        break;\n      case '4':\n        newCount = 8;\n        break;\n      case '8':\n        newCount = 12;\n        break;\n      case '12':\n        newCount = 16;\n        break;\n      case '16':\n        newCount = 20;\n        break;\n      case '20':\n        newCount = 24;\n        break;\n      case '24':\n        newCount = 28;\n        break;\n      case '28':\n        newCount = 32;\n        break;\n      case '32':\n        newCount = 0;\n        break;\n      default:\n        newCount = 0;\n    }\n    setEventCount(newCount);\n  };\n\n  return (\n    <ul className=\"event-list\">\n      {events.map((event) => (\n        <li className=\"event-list__item\" key={event.id}>\n          <Event event={event} />\n        </li>\n      ))}\n      {showMore === true && (\n        <div\n          className=\"show-more-events\"\n          onClick={() => handleShowMore()}\n          onKeyDown={() => handleShowMore()}\n          role=\"button\"\n          tabIndex={0}\n        >\n          <p>show more</p>\n          <span\n            className=\"material-icons\"\n          >\n            keyboard_double_arrow_down\n          </span>\n        </div>\n      )}\n    </ul>\n  );\n};\n\nexport default EventList;\n","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  constructor(props) {\n    super(props);\n\n    const { locations } = this.props;\n\n    this.state = {\n      query: '',\n      suggestions: locations,\n      showSuggestions: undefined,\n    };\n  }\n\n  handleInputChange = (value) => {\n    const { locations } = this.props;\n    const suggestionsToSet = locations\n      .filter((location) => location.toUpperCase().includes(value.toUpperCase()));\n    this.setState({\n      query: value,\n      suggestions: suggestionsToSet,\n      showSuggestions: true,\n    });\n  }\n\n  handleSuggestionClick = (suggestion) => {\n    const { updateEvents } = this.props;\n    updateEvents(suggestion);\n    this.setState({\n      query: suggestion,\n      showSuggestions: false,\n    });\n  }\n\n  render() {\n    const { query, suggestions, showSuggestions } = this.state;\n\n    return (\n      <div className=\"city-search\">\n        <input\n          type=\"text\"\n          className=\"city-search__input\"\n          placeholder=\"Search for cities...\"\n          value={query}\n          onChange={(e) => this.handleInputChange(e.target.value)}\n          onFocus={() => this.setState({ showSuggestions: true })}\n          onBlur={() => setTimeout(() => { this.setState({ showSuggestions: false }); }, 10)}\n        />\n        <ul\n          className=\"city-search__suggestions\"\n          style={showSuggestions ? { visibility: 'visible', opacity: 1 } : { visibility: 'hidden', opacity: 0 }}\n        >\n          {suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n            >\n              <button\n                type=\"button\"\n                className=\"city-search__button\"\n                onClick={() => this.handleSuggestionClick(suggestion)}\n                onKeyDown={() => this.handleSuggestionClick(suggestion)}\n              >\n                {suggestion}\n              </button>\n            </li>\n          ))}\n          <li key=\"all\">\n            <button\n              type=\"button\"\n              className=\"city-search__all-button\"\n              onClick={() => this.handleSuggestionClick('')}\n              onKeyDown={() => this.handleSuggestionClick('')}\n            >\n              <b>See all cities</b>\n\n            </button>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n  handleInputChange = (count) => {\n    const { setEventCount } = this.props;\n    setEventCount(count);\n  }\n\n  render() {\n    return (\n      <div className=\"number-of-events\">\n        <label htmlFor=\"number-of-events__input\">\n          <select\n            id=\"number-of-events__input\"\n            name=\"number-of-events__input\"\n            className=\"number-of-events__input\"\n            defaultValue=\"32\"\n            onChange={(e) => this.handleInputChange(e.target.value)}\n          >\n            <option className=\"number-of-events__option\" value=\"1\">1</option>\n            <option className=\"number-of-events__option\" value=\"2\">2</option>\n            <option className=\"number-of-events__option\" value=\"4\">4</option>\n            <option className=\"number-of-events__option\" value=\"8\">8</option>\n            <option className=\"number-of-events__option\" value=\"12\">12</option>\n            <option className=\"number-of-events__option\" value=\"16\">16</option>\n            <option className=\"number-of-events__option\" value=\"20\">20</option>\n            <option className=\"number-of-events__option\" value=\"24\">24</option>\n            <option className=\"number-of-events__option\" value=\"28\">28</option>\n            <option className=\"number-of-events__option\" value=\"32\">32</option>\n            <option className=\"number-of-events__option\" value=\"0\">all</option>\n          </select>\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","const mockData = [\n  {\n    kind: 'calendar#event',\n    etag: '\"3181161784712000\"',\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\n    status: 'confirmed',\n    htmlLink: 'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:17:46.000Z',\n    updated: '2020-05-27T12:01:32.356Z',\n    summary: 'Learn JavaScript',\n    description: 'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n    location: 'London, UK',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    start: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    end: {\n      dateTime: '2020-05-19T17:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\n    originalStartTime: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: 'default',\n  },\n  {\n    kind: 'calendar#event',\n    etag: '\"3181159875584000\"',\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\n    status: 'confirmed',\n    htmlLink: 'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:14:30.000Z',\n    updated: '2020-05-27T11:45:37.792Z',\n    summary: 'React is Fun',\n    description: 'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n    location: 'Berlin, Germany',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    start: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    end: {\n      dateTime: '2020-05-20T15:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\n    originalStartTime: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n    eventType: 'default',\n  },\n];\n\nexport { mockData as default };\n","const { AUTH_ENDPOINT, EVENTS_ENDPOINT, TOKEN_ENDPOINT } = {\n  EVENTS_ENDPOINT: 'https://rvnbvpzand.execute-api.eu-central-1.amazonaws.com/dev/api/get-events',\n  TOKEN_ENDPOINT: 'https://rvnbvpzand.execute-api.eu-central-1.amazonaws.com/dev/api/token',\n  AUTH_ENDPOINT: 'https://rvnbvpzand.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url',\n};\n\nexport { AUTH_ENDPOINT, EVENTS_ENDPOINT, TOKEN_ENDPOINT };\n","import axios from 'axios';\nimport NProgress from 'nprogress';\nimport mockData from './mock-data';\nimport { AUTH_ENDPOINT, EVENTS_ENDPOINT, TOKEN_ENDPOINT } from './config';\n\nconst removeQuery = () => {\n  let newurl = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;\n  if (window.history.pushState && window.location.pathname) {\n    window.history.pushState('', '', newurl);\n  } else {\n    newurl = `${window.location.protocol}//${window.location.host}`;\n    window.history.pushState('', '', newurl);\n  }\n};\n\nexport const extractLocations = (events) => {\n  const extractedLocations = events.map((event) => event.location);\n  const locations = [...new Set(extractedLocations)];\n  return locations;\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  /* eslint-disable-next-line */\n  const { access_token } = await fetch(\n    `${TOKEN_ENDPOINT}/${encodeCode}`,\n  )\n    .then((res) => res.json())\n    .catch((error) => error);\n\n  localStorage.setItem('access_token', access_token);\n\n  /* eslint-disable-next-line */\n  return access_token;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`,\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get(AUTH_ENDPOINT);\n      const { authUrl } = results.data;\n      window.location.href = authUrl;\n      return (window.location.href);\n    }\n    return getToken(code);\n  }\n  return accessToken;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n  removeQuery();\n  const url = `${EVENTS_ENDPOINT}/${token}`;\n  const result = await axios.get(url);\n  if (result.data) {\n    const locations = extractLocations(result.data.events);\n    localStorage.setItem('lastEvents', JSON.stringify(result.data));\n    localStorage.setItem('locations', JSON.stringify(locations));\n  }\n  NProgress.done();\n  return result.data.events;\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\n\nimport { extractLocations, getEvents } from './api';\nimport './nprogress.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      allEvents: [],\n      events: [],\n      locations: [],\n      currentLocation: '',\n      count: 32,\n      isLoading: true,\n      showMore: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData().then((data) => {\n      this.setState({\n        allEvents: data.events,\n        events: data.events.slice(0, 32),\n        locations: data.locations,\n        isLoading: false,\n      });\n      if (data.events.length > 32) {\n        this.setState({\n          showMore: true,\n        });\n      }\n    });\n  }\n\n  fetchData = async () => {\n    const events = await getEvents();\n    const locations = extractLocations(events);\n    return { events, locations };\n  };\n\n  setEventCount = async (number) => {\n    const { currentLocation } = this.state;\n    await this.setState({ count: number });\n    this.updateEvents(currentLocation);\n  }\n\n  setValue = () => {\n    const { count } = this.state;\n    document.getElementById('number-of-events__input').value = count;\n  }\n\n  updateEvents = (location) => {\n    const { count, allEvents } = this.state;\n    const locationEvents = (location === '') ? allEvents : allEvents.filter((event) => event.location === location);\n\n    if (count.toString() === '0') {\n      this.setState({\n        currentLocation: location,\n        events: locationEvents,\n        showMore: false,\n      });\n    } else if (count.toString() !== '0') {\n      const locationEventsShortened = locationEvents.slice(0, count);\n      this.setValue();\n      if (locationEventsShortened.length === locationEvents.length) {\n        this.setState({\n          currentLocation: location,\n          events: locationEventsShortened,\n          showMore: false,\n        });\n      } else {\n        this.setState({\n          currentLocation: location,\n          events: locationEventsShortened,\n          showMore: true,\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      events, locations, isLoading, showMore, count,\n    } = this.state;\n\n    if (isLoading) {\n      return (\n        <div className=\"loader-container\"><p>loading...</p></div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"search-bar\">\n          <CitySearch locations={locations} updateEvents={this.updateEvents} />\n          <NumberOfEvents setEventCount={this.setEventCount} />\n        </div>\n        <EventList\n          events={events}\n          showMore={showMore}\n          setEventCount={this.setEventCount}\n          count={count}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      const regist = registration;\n      regist.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport * as atatus from 'atatus-spa';\n\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\natatus.config('4d140ed88b9a4f5db0deabc742b2398a').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}